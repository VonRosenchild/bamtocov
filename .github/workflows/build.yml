# copied from Daniel Cook's Seq collection
name: "Build Bamtocov"

on: 
  - push
  - pull_request

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-10.15]
        nimversion:
        - stable
        - devel


    steps:
    - uses: actions/checkout@v2

    # Caching
    - name: Cache choosenim
      id: cache-choosenim
      uses: actions/cache@v1
      with:
        path: ~/.choosenim
        key: ${{ runner.os }}-choosenim-stable

    - name: Cache nimble
      id: cache-nimble
      uses: actions/cache@v1
      with:
        path: ~/.nimble
        key: ${{ runner.os }}-nimble-stable

    - name: Cache htslib
      id: cache-htslib
      uses: actions/cache@v1
      with:
        path: $HOME/htslib
        key: ${{ runner.os }}-htslib-1.10

    # Install Dependencies
    - name: Install dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get -qy install bwa make build-essential cmake libncurses-dev ncurses-dev libbz2-dev lzma-dev liblzma-dev \
             curl libssl-dev libtool autoconf automake libcurl4-openssl-dev

    # Setup htslib
    - name: Install htslib (linux)
      if: runner.os == 'Linux'
      run: |
        cd
        git clone --recursive https://github.com/samtools/htslib.git
        cd htslib && git checkout 1.12 && autoheader && autoconf && ./configure --enable-libcurl
        cd
        sudo make -j 4 -C htslib install
        #echo "::set-env name=LD_LIBRARY_PATH::${LD_LIBRARY_PATH}:${HOME}/htslib"
        echo "LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${HOME}/htslib" >> $GITHUB_ENV
        ls -lh $HOME/htslib/*.so
 

    - name: Install hstlib (macos)
      if: runner.os == 'macOS'
      run: |
        brew install htslib

    - uses: iffy/install-nim@v3.2.0
      with:
        version: ${{ matrix.nimversion }}

    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - uses: actions-rs/cargo@v1


    # Build and Test
    - name: Build macOS executable
      if: runner.os == 'macOS'
      run: |
        nimble build -y --verbose 
        ls -l bin/
        samtools index input/mini.bam
        bin/bamtocov --version
        bin/bamtocounts --version
        bin/bamtocov input/mini.bam
        echo "--"
        cat input/regions.bed
        echo "--"
        bin/bamtocounts input/regions.bed input/mini.bam --debug --header
        # TESTS
        # bash tests/all.sh
        tests/bin/shpec tests/shpec/bamtocov.sh
        tests/unit/bamtocov-base.sh
        
    - name: Build and Test Linux executable
      if: runner.os == 'Linux'
      run: |
        nimble build -y --verbose
        ls -l bin/
        samtools index input/mini.bam
        bin/bamtocov --version
        bin/bamtocounts --version
        bin/bamtocov input/mini.bam
        bin/bamtocounts input/regions.bed input/mini.bam --debug --header
        echo SKIPPING bash tests/all.sh
        tests/bin/shpec tests/shpec/bamtocov.sh
        tests/unit/bamtocov-base.sh

