on:
  release:
    types: [created]
name: Handle Release

jobs:
  generate:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-10.15]
        nimversion:
        - stable

    name: Create release-artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@master
 
      # Caching
      - name: Cache choosenim
        id: cache-choosenim
        uses: actions/cache@v1
        with:
          path: ~/.choosenim
          key: ${{ runner.os }}-choosenim-stable

      - name: Cache nimble
        id: cache-nimble
        uses: actions/cache@v1
        with:
          path: ~/.nimble
          key: ${{ runner.os }}-nimble-stable

      - name: Cache htslib
        id: cache-htslib
        uses: actions/cache@v1
        with:
          path: $HOME/htslib
          key: ${{ runner.os }}-htslib-1.10

      # Install Dependencies
      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get -qy install bwa make build-essential cmake libncurses-dev ncurses-dev libbz2-dev lzma-dev liblzma-dev \
              curl libssl-dev libtool autoconf automake libcurl4-openssl-dev

      # Setup htslib
      - name: Install htslib (linux)
        if: runner.os == 'Linux'
        run: |
          cd
          git clone --recursive https://github.com/samtools/htslib.git
          cd htslib && git checkout 1.11 && autoheader && autoconf && ./configure --enable-libcurl
          cd
          sudo make -j 4 -C htslib install
          #echo "::set-env name=LD_LIBRARY_PATH::${LD_LIBRARY_PATH}:${HOME}/htslib"
          echo "LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${HOME}/htslib" >> $GITHUB_ENV
          ls -lh $HOME/htslib/*.so
  

      - name: Install hstlib (macos)
        if: runner.os == 'macOS'
        run: |
          brew install htslib

      - uses: iffy/install-nim@v3.2.0
        with:
          version: ${{ matrix.nimversion }}

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1


      # Build and Test
      - name: Build macOS executable
        if: runner.os == 'macOS'
        run: |
          nimble build -Y bamtocov.nimble && mv bin/bamtocov bin/bamtocov_${{ matrix.os }}
          
      - name: Build Linux executable
        if: runner.os == 'Linux'
        run: |
          nimble build -Y bamtocov.nimble && mv bin/bamtocov bin/bamtocov_${{ matrix.os }}
      
        
      - name: Upload the artifacts
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: 'bin/bamtocov_*'
